# Perf-rebalance test with views
# 1 design ddoc, 8 views
# 6K ops/sec
# 90% reads, 10% writes (6% updates/deletes, 4% inserts)
# 40M dataset
# Rebalance from 3 to 4 nodes

performance.iperf.RebalanceTests.test_view_rebalance_1

params:

# general
batch=50
kind=json
mem_quota=25000

# load phase
items=40000000
hot_init_items=4000000

# access phase
ratio_sets=0.1
ratio_misses=0.05
ratio_creates=0.40
ratio_deletes=0.50
ratio_hot=0.1
ratio_hot_gets=0.99
ratio_hot_sets=0.99
ratio_expirations=0.0
bg_max_ops_per_sec=250
max_creates=10000000000
fg_max_ops=45000000
fg_max_ops_per_sec=35
total_clients=24

# rebalance
rebalance_after=3000000
num_nodes_before=3
num_nodes_after=2

# control (defaults: pytests/performance/perf_defaults.py)
load_wait_until_drained=1
loop_wait_until_drained=0
mcsoda_heartbeat=3
tear_down=1
tear_down_proxy=1
tear_down_bucket=0
tear_down_cluster=1
tear_down_on_setup=0
bg_protocol=memcached-binary
