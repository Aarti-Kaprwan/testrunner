#!/bin/bash

if [[ -z $1 ]] ; then
    echo "$0 <testconf> [email list]"
    exit
fi

testconf=$1

if [[ $2 ]] ; then
    emails="$2"
else
    emails=""
fi

latest=$(curl -s http://builds.hq.northscale.net/latestbuilds/ | grep membase-server-enterprise_x86_64 | grep rpm | cut -f 2 -d "\"" | sort -t "-" -k 4 -n | tail -n1 | sed s'/^membase-server-enterprise_x86_64_\(.*\).rpm$/\1/')
count=$(curl -s http://builds.hq.northscale.net/latestbuilds/ | grep -o -e membase-server-enterprise_x86_64_$latest.deb -e membase-server-enterprise_x86_64_$latest.rpm -e membase-server-enterprise_x86_$latest.deb -e membase-server-enterprise_x86_$latest.rpm -e membase-server-enterprise_win2008_x86_$latest.setup.exe -e membase-server-enterprise_win2008_x86_64_$latest.setup.exe -e membase-server-community_x86_64_$latest.deb -e membase-server-community_x86_64_$latest.rpm -e membase-server-community_x86_$latest.deb -e membase-server-community_x86_$latest.rpm -e membase-server-community_win2008_x86_$latest.setup.exe -e membase-server-community_win2008_x86_64_$latest.setup.exe | sort | uniq | wc -l)

# make sure we have all 4 deb/rpms before we start
if [[ $count -ne 12 ]] ; then
    echo "looks like a new build is going out, retry later"
    exit
fi

if [[ -f auto/$latest.$testconf.log ]] ; then
    exit
fi

echo "Starting $testconf test against $latest"

mkdir auto &> /dev/null
s=$(date +%s)
./testrunner -c $testconf.conf -f servers_smoke -v $latest -m "$emails" &> auto/$latest.$testconf.log
e=$(date +%s)

echo "Finished $testconf : elapsed: $((e-s)) seconds"
