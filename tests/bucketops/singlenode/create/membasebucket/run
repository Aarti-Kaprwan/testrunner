#!/usr/bin/env python

import sys
import unittest
sys.path.append(".")
sys.path.append("lib")
sys.path.append("pytests")

if __name__ == '__main__':
    import logger
    logger.Logger.start_logger('test_create_membase_bucket')
    suite = unittest.TestLoader().loadTestsFromNames(names =[
    'management.bucketops.singlenode.create.createtests.CreateMembaseBucketsTests.test_default_on_11211',
    'management.bucketops.singlenode.create.createtests.CreateMembaseBucketsTests.test_default_case_sensitive_on_11211',
    'management.bucketops.singlenode.create.createtests.CreateMembaseBucketsTests.test_default_on_non_default_port',
    'management.bucketops.singlenode.create.createtests.CreateMembaseBucketsTests.test_default_case_sensitive_different_port',
    'management.bucketops.singlenode.create.createtests.CreateMembaseBucketsTests.test_non_default',
    'management.bucketops.singlenode.create.createtests.CreateMembaseBucketsTests.test_non_default_case_sensitive_same_port',
    'management.bucketops.singlenode.create.createtests.CreateMembaseBucketsTests.test_non_default_case_sensitive_different_port'])
    from TestInput import TestInputParser,TestInputSingleton
    TestInputSingleton.input = TestInputParser.get_test_input(sys.argv)
    result = unittest.TextTestRunner(verbosity=2).run(suite)
    logger.Logger.stop_logger()
    if result.failures or result.errors:
        sys.exit(-1)
    sys.exit(0)